[default]
name = root-ca
default_ca = CA_default
name_opt = ca_default
cert_opt = ca_default

[CA_default]
home = .
database = $home/db/index
serial = $home/db/serial
crlnumber = $home/db/crlnumber
certificate = $home/$name.crt
private_key = $home/private/$name.key
RANDFILE = $home/private/random
new_certs_dir = $home/certs
unique_subject = no
copy_extensions = none
default_days = 3650
default_crl_days = 365
default_md = sha256
policy = policy_to_match

[policy_to_match]
countryName = match
stateOrProvinceName = optional
organizationName = match
organizationalUnitName = optional
commonName = supplied
emailAddress = optional

[req]
default_bits = 4096
encrypt_key = no
default_md = sha256
utf8 = yes
string_mask = utf8only
distinguished_name = req_distinguished_name
req_extensions = v3_req


[ req_distinguished_name ]
countryName              = Country Name (2 letter code)
countryName_default = CN
stateOrProvinceName             = State or Province Name (full name)
stateOrProvinceName_default = Shanghai
localityName              = Locality Name (eg, city)
localityName_default = Shanghai
#组织名
organizationName = Organizational Name
organizationName_default = dranixj
organizationalUnitName             = Organizational Unit Name (eg, section)

organizationalUnitName_default = dranixj
commonName         = Common Name
commonName_default   = domain.k8s.local
commonName_max = 64

# 新增最后一行内容 subjectAltName = @alt_names（前2行默认存在）
[ v3_req ]
# Extensions to add to a certificate request
basicConstraints = CA:FALSE
keyUsage = nonRepudiation, digitalSignature, keyEncipherment
subjectAltName = @alt_names



# 新增 alt_names,注意括号前后的空格，DNS.x 的数量可以自己加
[ alt_names ]
DNS.1 = domain.k8s.local
DNS.2 = dashboard.k8s.local
DNS.3 = kibana.k8s.local
DNS.4 = elasticsearch.k8s.local
DNS.5 = prometheus.k8s.local
DNS.6 = grafana.k8s.local
DNS.7 = traefik.k8s.local
DNS.8 = jenkins.k8s.local
DNS.9 = redmine.k8s.local

########操作步骤#########################
#mkdir ~/ssl/{db,private,certs}
#chmod 400 ~/ssl/private
#touch ~/ssl/db/index
#echo 00 > ~/ssl/serial
#生成自签名CA证书
#openssl req -new -x509 -days 3650 -keyout root-ca.key -out root-ca.crt -config ssl.conf
#把私钥存入private文件夹
#chmod 400 root-ca.key
#sudo mv root-ca.key private/
#生成服务器私钥
#openssl genrsa -out tls.key 2048
#生成服务器公钥
#openssl req -new -key tls.key -out tls.csr -config ssl.conf
#用CA签名服务器证书（因为要读取private文件夹下的CA私钥，所以要sudo运行）
#sudo openssl ca -in tls.csr -out tls.crt -extensions v3_req -config ssl.conf
#执行下面的语句使treafik应用此服务器证书
#kubectl create secret generic traefik-cert --from-file=tls.crt --from-file=tls.key -n kube-system
#如果traefik-deployment已经构筑，则需要重新构筑（手动删除pod刷新）
#########################################